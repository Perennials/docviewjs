//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

// Core styles
.Button {
	display: inline-block;
	padding: @padding-small-vertical @padding-small-horizontal;
	font-size: @font-size-base;
	font-weight: 500;
	line-height: @line-height-base;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	border: 1px solid transparent;
	border-radius: @border-radius-base;
	white-space: nowrap;
	margin-top: -1px; // this is to compensate the shadow

	box-shadow: 0 1px 0 rgba(0, 0, 0, 0.12), inset 0 1px 2px rgba(255, 255, 255, 0.25);

	&:focus:not(.disabled) {
		.tab-focus();
	}
}


// Button pseudo states
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

// Button backgrounds
// ------------------
.buttonBackground( @primaryColor, @secondaryColor, @textColor, @textShadow ) {
	color: @textColor;
	text-shadow: 0 1px 0 fade( @textShadow, 25% );
	#gradient > .vertical(@primaryColor, 0%, @secondaryColor, 100%);
	border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 5%);
	border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 5%);
	.reset-filter();
}


.btn-pseudo-states(@color, @background, @border, @hoverColor: #ffffff, @textShadow: #000 ) {

	.buttonBackground( @background, darken( @background, 5% ), @color, @textShadow );

	&:hover:not(.disabled) {
		.buttonBackground( darken( @background, 5% ), darken( @background, 10% ), @hoverColor, @textShadow );
	}
	
	&:active:not(.disabled),
	&.active {
		.buttonBackground( darken( @background, 5% ), darken( @background, 10% ), @hoverColor, @textShadow );
		box-shadow: inset 0 3px 5px darken( rgba(255, 255, 255, 0.25), 50% );
	}

	&.active:focus {
		box-shadow: inset 0 3px 5px darken( rgba(255, 255, 255, 0.25), 50% ), @focus-box-shadow;
	}

}

// Alternate buttons
// --------------------------------------------------

.Button/*.default*/ {
	.btn-pseudo-states(@btn-default-color, @btn-default-bg, @btn-default-border, darken( @btn-default-color, 10% ), #fff );
}
.Button.primary {
	.btn-pseudo-states(@btn-primary-color, @btn-primary-bg, @btn-primary-border);
}
// Warning appears as orange
.Button.warning {
	.btn-pseudo-states(@btn-warning-color, @btn-warning-bg, @btn-warning-border);
}
// Danger and error appear as red
.Button.danger {
	.btn-pseudo-states(@btn-danger-color, @btn-danger-bg, @btn-danger-border);
}
// Success appears as green
.Button.success {
	.btn-pseudo-states(@btn-success-color, @btn-success-bg, @btn-success-border);
}
// Info appears as blue-green
.Button.info {
	.btn-pseudo-states(@btn-info-color, @btn-info-bg, @btn-info-border);
}
// Why did you remove the inverse state in bootstrap 3?
.Button.inverse {
	.btn-pseudo-states(@btn-inverse-color, @btn-inverse-bg, @btn-inverse-border);
}



// Button Sizes
// --------------------------------------------------

.Button.large {
	font-size: @font-size-large;
	border-radius: @border-radius-large;
}

.Button.small {
	padding: (@small-padding-v * 0.5) (@small-padding-h * 0.5);
	font-size: @font-size-small;
	line-height: 1.5; // ensure proper height of button next to small input
	border-radius: @border-radius-small;
}

.Button.tiny {
	padding: @tiny-padding-v (@tiny-padding-h * 2);
	font-size: @font-size-mini;
	border-radius: @border-radius-small;
}